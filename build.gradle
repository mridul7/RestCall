
buildscript {
    /*   ext {
           springBootVersion = '1.5.9.RELEASE'
       }
       repositories {
           mavenCentral()
       }*/
    dependencies {
        /// classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

plugins {
    id 'groovy'
    id 'org.springframework.boot' version '2.0.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
}

apply plugin: 'docker'

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}





bootJar {
    mainClassName = 'hello.App'
}


dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'



    implementation 'org.springframework.boot:spring-boot-dependencies:2.0.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // https://mvnrepository.com/artifact/javax.persistence/persistence-api
    compile group: 'javax.persistence', name: 'persistence-api', version: '1.0.2'
    compile 'org.json:json:20171018'
// https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'



    testImplementation 'org.springframework.boot:spring-boot-starter-test'


  /*  components {
        withModule('org.springframework:spring-beans') {
            allVariants {
                withDependencyConstraints {
                    // Need to patch constraints because snakeyaml is an optional dependency
                    it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
                }
            }
        }}*/

}

task buildDocker(type: Docker, dependsOn: build) {
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}
